{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/service/service-reservation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","reservationService","title","displayedColumnsRooms","displayedColumnsMeetings","displayedColumnsReservations","getAllRooms","getAllMeetings","subscribe","data","meetingsData","roomsData","makeReservationsMatch","reservationsData","faireReservation","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ServiceReservationService","httpClient","apiBaseUrl","makeReservationMatch_Path","getAllReservation_Path","getAllMeeting_Path","getAllRooms_Path","getAllReservationEquipment","get","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { ServiceReservationService } from './service/service-reservation.service';\nimport { Observable } from 'rxjs';\nimport { Meeting } from './entities/meeting';\nimport { Room } from './entities/room';\nimport { Reservation } from './entities/reservation';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'meetingPlannerProject';\n  public meetingsData : Meeting[];\n  public roomsData : Room[];\n  public reservationsData : Reservation[];\n\n  displayedColumnsRooms: string[] = ['id', 'name', 'capacity', 'equipement'];\n  displayedColumnsMeetings: string[] = ['id', 'name', 'type', 'start_time','end_time','participant'];\n  displayedColumnsReservations: string[] = ['id', 'date_reservation', 'salle', 'reunion','reserv_debut_time','reserv_fin_time'];\n\n\n  constructor(private reservationService : ServiceReservationService) { }\n\n  ngOnInit(): void {\n    this.getAllRooms();\n    this.getAllMeetings();\n  }\n\n  getAllMeetings(){\n     this.reservationService.getAllMeetings().subscribe((data: any[])=>{ \n      this.meetingsData = data;\n    }); \n  }\n\n  getAllRooms(){\n    this.reservationService.getAllRooms().subscribe((data: any[])=>{ \n     this.roomsData = data;\n   }); \n }\n\n faireReservation(){\n  this.reservationService.makeReservationsMatch().subscribe((data: any[])=>{ \n   this.reservationsData = data;\n }); \n}\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h5 class=\"col-md-6\" align=\"center\">LISTE DES SALLES</h5>\n        <h5 class=\"col-md-6\" align=\"center\">LISTE DES REUNIONS</h5>\n    </div>\n    <div class=\"row form-group\">\n        <div class=\"col-md-6 tableFixed\" align=\"center\">\n            <table mat-table [dataSource]=\"roomsData\" class=\"mat-elevation-z2 \">\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef> Id. </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"capacity\">\n                    <th mat-header-cell *matHeaderCellDef> Capacity </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.capacity}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"equipement\">\n                    <th mat-header-cell *matHeaderCellDef> Equipement </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.equipement}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumnsRooms\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumnsRooms;\"></tr>\n            </table>\n        </div>\n        <div class=\"col-md-6 tableFixed\" align=\"center\">\n            <table mat-table [dataSource]=\"meetingsData\" class=\"mat-elevation-z2 \">\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef> Id. </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"type\">\n                    <th mat-header-cell *matHeaderCellDef> Type </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"start_time\">\n                    <th mat-header-cell *matHeaderCellDef> Debut Reunion </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.start_time}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"end_time\">\n                    <th mat-header-cell *matHeaderCellDef> Fin Reunion </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.end_time}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"participant\">\n                    <th mat-header-cell *matHeaderCellDef> Participants </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.participant}} </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumnsMeetings\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumnsMeetings;\"></tr>\n            </table>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\">\n        <span class=\"col-md-5\"></span>\n        <button mat-button class=\"col-md-2\" color=\"primary\" (click)=\"faireReservation()\">Lancer Matching Reservation</button>\n    </div>\n\n    <br>\n    <div class=\"row\">\n        <h5 align=\"center\">LISTE DES RESERVATIONS</h5>\n    </div>\n    <div class=\"row form-group\">\n        <div class=\"tableFixed\" align=\"center\">\n            <table mat-table [dataSource]=\"reservationsData\" class=\"mat-elevation-z2 \">\n                <ng-container matColumnDef=\"id\">\n                    <th mat-header-cell *matHeaderCellDef> Id. </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"date_reservation\">\n                    <th mat-header-cell *matHeaderCellDef> Date Reservation </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.heure_de_reservation}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"salle\">\n                    <th mat-header-cell *matHeaderCellDef> Salle </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.salle.name}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"reunion\">\n                    <th mat-header-cell *matHeaderCellDef> Reunion </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.reunion.name}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"reserv_debut_time\">\n                    <th mat-header-cell *matHeaderCellDef> Debut Reservation </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.reserv_debut_time}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"reserv_fin_time\">\n                    <th mat-header-cell *matHeaderCellDef> Fin Reservation </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.reserv_fin_time}} </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumnsReservations\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumnsReservations;\"></tr>\n            </table>\n        </div>\n    </div>\n\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpRequest, HttpHeaders, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceReservationService {\n\n  private apiBaseUrl = environment.apiBaseUrl;\n  private makeReservationMatch_Path = '/meeting/reserver';\n  private getAllReservation_Path = '/meeting/reservations';\n  private getAllMeeting_Path = '/meeting/reunions';\n  private getAllRooms_Path = '/meeting/salles';\n  private getAllReservationEquipment = '/meeting/buildHand';\n\n  constructor(private httpClient: HttpClient) {\n\n  }\n\n\n  public makeReservationsMatch(){\n    return this.httpClient.get( this.apiBaseUrl + this.makeReservationMatch_Path);\n  }\n\n  public getAllReservations(){\n    return this.httpClient.get( this.apiBaseUrl + this.getAllReservation_Path);\n  }\n\n  public getAllMeetings(){\n    return this.httpClient.get( this.apiBaseUrl + this.getAllMeeting_Path);\n  }\n\n  public getAllRooms(){\n    return this.httpClient.get( this.apiBaseUrl + this.getAllRooms_Path);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}